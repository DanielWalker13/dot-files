#----------------------------------------------------------
# Aliases 
#----------------------------------------------------------

alias cls=clear  
alias cfv=nvim ~/.vimrc  
alias cfvn=nvim ~/.config/nvim/init.vim
alias cfz=nvim ~/.zshrc
alias cfzp=nvim ~/.zprofile
alias zsc=source ~/.zprofile
alias cft=nvim ~/.tmux.conf
alias tsc=tmux source-file ~/.tmux.conf
alias tll=tmux ls
alias t=terraform
alias boom=aws-fed login vault-dev && export AWS_PROFILE='saml' && terraform destroy
alias md=macdown
alias ti=terraform init
alias tp=terraform plan
alias tpb=terraform plan -out input.binary
alias ts=terraform show -json input.binary >
alias yolo=terraform apply -auto-approve
alias ct=conftest test
alias tpy=cd ~/Documents/Training/Python
alias mark=nvim ~/Documents/Training/Git/markdown.md
alias es=nvim ~/Documents/Training/Git/markdown.md
alias vman=nvim ~/Documents/Training/Git/vim.md
alias research=nvim ~/Documents/Security/Notes/research.md
alias vim=nvim
alias coe=aws-fed login coe-dev && export AWS_PROFILE='saml'
alias tunzip=tar zxvf
alias gctl=glooctl
alias mgwr=sudo /usr/local/McAfee/Mcp/bin/mcpcontrol.sh restart
alias ff=nvim $(fzf)
alias gtfr=grep -r 'resource \"' .
alias sadev=aws-fed login assure-dev && export AWS_PROFILE='saml'
alias vdev=aws-fed login vault-dev && export AWS_PROFILE='saml'
alias vtest=aws-fed login vault-test && export AWS_PROFILE='saml'
alias sdev=aws-fed login sec-dev && export AWS_PROFILE='saml'
alias sdevops=aws-fed login sec-dev-ops && export AWS_PROFILE='saml'
alias stest=aws-fed login sec-test && export AWS_PROFILE='saml'
alias sprod=aws-fed login sec-prod && export AWS_PROFILE='saml'
alias intdev=aws-fed login int-dev && export AWS_PROFILE='saml'
alias vopsprod=aws-fed login vault-ops-prod && export AWS_PROFILE='saml'
alias ta=tmux attach -t 
alias tfcmdb=tmux attach -t tfcmdb
alias tch=tmux attach -t 1touch
alias vsaas=tmux attach -t vault-saas
alias noname=tmux attach -t noname
alias team=cd ~/Work/team_structure
alias infra=cd ~/Work/Vault/vault-infra/
alias gsil=cd ~/Work/gsil
alias ggo=cd ~/Work/gsil/temp_py_testing/_go_ingestion
alias pro=cd /Users/c03104/Work/protegirty
alias esc=cd ~/Work/gsil/_es_cluster
alias tmap=cd ~/Work/scripts/python_testing/terra_map
alias adecode=aws sts decode-authorization-message --encoded-message
alias ssm=aws ssm start-session --target
alias b=bash
alias c-=cd -
alias g-=git -
alias gb=git branch
alias gbr=git branch -a
alias gc=git commit -ma
alias gch=git checkout
alias gdel=git branch -d
alias gd=git diff --staged
alias gs=git status
alias gst=git stash
alias gstp=git stash pop
alias gl=git log --graph
alias glp=git log --pretty=format:"%h %s" --graph
alias grl=git reflog
alias gdrb=git push origin --delete
alias gamend=git commit --amend --no-edit
alias gurl=git config --get remote.origin.url
alias grsc=git remote show origin
alias gcb=git clone --bare
alias gwa=git worktree add 
alias pip=pip3
alias venvn=python3 -m venv ./venv
alias venva=source ./venv/bin/activate
alias venvd=deactivate
alias gl=git log --graph
alias goog=googler --notweak
alias wrk=cd ~/Work/
alias healing=cd ~/Work/gsil/temp_py_testing/es_healing
alias faker=cd ~/Work/git_repos/faker_testing/awsproserve/_kibana_scripts
alias s3file=cd ~/Work/gsil/temp_py_testing/s3_inventory
alias dev=cd ~/Work/Vault/vault-cluster/dev
alias raas=cd ~/Work/git_repos/aws-roles-as-a-service/
alias gate=cd ~/Work/aws-gatekeeper-deployment
alias vmod=cd ~/Work/Vault/vault-cluster/vault-module
alias vtf=~cd /Work/Vault/canary_test/vault_tf/vault_configs
alias salt=cd ~/Work/salt-security
alias wiki=nvim ~/vimwiki/index.md
alias nk=cat ~/Work/Vault/rsa/new_key
alias tauth=vdev && bash ~/Work/Vault/vault-infra/dev-infra/v-dev_creds.sh
alias brewd=ll /usr/local/cellar/
alias bp=brew --prefix
alias eksdesc=aws eks describe-cluster --region us-east-1 --name
alias eksgseconf=aws eks --region us-east-1 update-kubeconfig --name gse-test-cluster
alias ekssaltconf=aws eks --region us-east-1 update-kubeconfig --name salt-cluster
alias ekstempconf=aws eks --region us-east-1 update-kubeconfig --name salt-cluster
alias kc=kubectl
alias kcf=kubectl config 
alias kcfls=kubectl config view
alias kmap=kubectl get configmap
alias kmapdel=kubectl delete configmap
alias kall=kubectl get all
alias kalla=kubectl get all -A
alias ke=kubectl get events
alias kea=kubectl get events --all-namespaces --sort-by='.metadata.creationTimestamp'
alias kl=kubectl logs
alias ksvc=kubectl get svc
alias ksvcd=kubectl describe svc
alias ksvcdel=kubectl delete svc
alias ksa=kubectl get sa
alias ksad=kubectl describe sa
alias ki=kubectl get Ingress
alias kns=kubectl get namespace
alias knsc=kubectl create namespace
alias knsd=kubectl describe namespace
alias knsdel=kubectl delete namespace
alias knschk=kubectl config view --minify | grep namespace:
alias kctx=kubectl config get-contexts
alias kctxs=kubectl config use-context
alias kctxd=kubectl config unset contexts.
alias kp=kubectl get pods
alias kpd=kubectl describe pods
alias kpdel=kubectl delete pod
alias kpns=kubectl get pods --A
alias kpl=kubectl get pods --show-labels
alias kn=kubectl get nodes
alias knd=kubectl describe nodes
alias kd=kubectl get deployment
alias kdd=kubectl describe deployment
alias kds=kubectl get daemonset
alias kdsd=kubectl describe daemonset
alias kpsp=kubectl get psp
alias kpspd=kubectl describe psp
alias kyolo=kubectl apply -f
alias kdc=kubectl create deployment
alias kddel=kubectl delete deployment
alias kexec=kubectl exec -- bash -it
alias kdel=kubectl delete -f
alias kproxy=kubectl proxy
alias hls=helm ls
alias hlsa=helm list --all-namespaces
alias hlsn=helm ls --namespace
alias hpl=helm plugin list
alias henv=helm env
alias hcc=helm create
alias hrl=helm repo list
alias hra=helm repo add
alias hrd=helm repo remove
alias hru=helm repo update
alias hi=helm install
alias hu=helm upgrade
alias hrb=helm rollback
alias hui=helm uninstall
alias hrla=helm get all
alias hrlh=helm get hooks
alias hrlhis=helm history
alias hrlm=helm get manifest
alias hrln=helm get notes
alias hrlv=helm get values
alias awsall=aws resourcegroupstaggingapi  get-resources --region us-east-1 | jq '.ResourceTagMappingList | [.[].ResourceARN]'
alias awsid=aws sts get-caller-identity --output json | jq ' . | {Account: .Account, Arn: .Arn}'
alias awsido=aws sts get-caller-identity --output json | jq ' .Account'
alias lambdaall=aws lambda list-functions | jq -r ' .[][]'
alias lambda=aws lambda list-functions | jq -r ' .[][] | { Name: .FunctionName, Arn: .FunctionArn, Role: .Role, Handler: .Handler, Vpc: .VpcConfig}'
alias lambdal=aws lambda list-layers | jq -r '.Layers[ ]'
alias rds=aws rds describe-db-instances --output json | jq '. | .[] | .[] | { Type: .StorageType, CluserId: .DBClusterIdentifier, Arn: .DBInstanceArn,  KmsArn: .KmsKeyId, Encrypted: .StorageEncrypted, Public:.PubliclyAccessible, Tags: .TagList }'
alias rdspg=aws rds describe-db-parameter-groups --output json | jq '. | .[]'
alias rdssg=aws rds describe-db-subnet-groups --output json | jq '.'
alias sgs=aws ec2 describe-security-groups | jq '.SecurityGroups[]|\"{ Security Group: \"+.GroupId+\", Security Group Name: \"+.GroupName+\" }\"'
alias subnets=aws ec2 describe-subnets --filter Name=vpc-id,Values=vpc-0ec6479de7f4445c2| jq  '.Subnets[] | .SubnetId, .VpcId, .CidrBlock, .AvailabilityZone, (.Tags | .[] | select(.Key==\"Name\" ) | .Value ), (.Tags | .[] | select(.Key!=\"Name\" ))'
alias subnetid=aws ec2 describe-subnets | jq  '.Subnets[] | .SubnetId, .VpcId, (.Tags | .[] | select(.Key==\"Name\" ) | .Value )'
alias vpc=aws ec2 describe-vpcs | jq  '.Vpcs[] | { Name: .Tags | .[] | select(.Key==\"Name\") | .Value, VpcId: .VpcId }'
alias apigwid=aws apigateway get-rest-apis | jq -r ‘.items[ ] | .id+\” \“+.name’
alias apigwkey=aws apigateway get-api-keys | jq -r ‘.items[ ] | .id+\” \“+.name’
alias apigwdn=aws apigateway get-domain-names | jq -r ‘.items[ ] | .domainName+\” \“+.regionalDomainName’
alias apigwres=aws apigateway get-resources --rest-api-id ee86b4cde | jq -r ‘.items[ ] | .id+\” \“+.path’
alias apigwlambda=aws apigateway get-integration --rest-api-id (id) --resource-id (resource id) --http-method GET | jq -r ‘.uri’
alias cwaws=cloudwatch describe-alarms | jq -r ‘.MetricAlarms[ ] | .AlarmName+\” \“+.Namespace+\” \“+.StateValue’
alias cwdela=aws cloudwatch delete-alarms --alarm-names
alias ddb=aws dynamodb list-tables | jq -r .TableNames [ ]
alias ddbai=aws dynamodb scan --table-name events
alias ddbic=aws dynamodb scan --table-name events --select count | jq .ScannedCount
alias ebscoms=aws ebs complete-snapsho
 
alias ec2=aws ec2 describe-instances | jq -r '.Reservations[].Instances[]|.InstanceId+\" \"+.InstanceType+\" \"+(.Tags[] | select(.Key == \"Name\").Value)'
alias ec2pip=aws ec2 describe-instances --query 'Reservations[*].Instances[?not_null(PublicIpAddress)]' | jq -r '.[][]|.PublicIpAddress+\" \"+(.Tags[]|select(.Key==\"Name\").Value)'
alias eni=aws ec2 describe-network-interfaces --output json | jq '.NetworkInterfaces'
alias sgsid=aws ec2 describe-instances --instance-ids i-0dae5d4daa47fe4a2 | jq -r '.Reservations[].Instances[].SecurityGroups[]|.GroupId+\" \"+.GroupName'
alias sgsinst=aws ec2 modify-instance-attribute --instance-id i-0dae5d4daa47fe4a2 --groups
alias sgsr=aws ec2 describe-security-groups --group-ids sg-02a63c67684d8deed | jq -r '.SecurityGroups[].IpPermissions[]|. as $parent|(.IpRanges[].CidrIp+
alias eksd=aws eks describe-cluster --name  #  <cluster name>
 
alias eks=aws eks list-clusters  #  
alias r53ghz=aws route53 get-hosted-zone --id  # <example>
 
alias r53hz=aws route53 list-hosted-zones

